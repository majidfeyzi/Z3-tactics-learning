(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |Benchmarks generated from hycomp (https://es-static.fbk.eu/tools/hycomp/). BMC instances of non-linear hybrid automata taken from: Alessandro Cimatti, Sergio Mover, Stefano Tonetta, A quantifier-free SMT encoding of non-linear hybrid automata, FMCAD 2012 and Alessandro Cimatti, Sergio Mover, Stefano Tonetta, Quantier-free encoding of invariants for Hybrid Systems, Formal Methods in System Design. This instance solves a BMC problem of depth 0 and uses the quantifier free encoding with equivalences encoding. Contacts: Sergio Mover (mover@fbk.eu), Stefano Tonetta (tonettas@fbk.eu), Alessandro Cimatti (cimatti@fbk.eu).|)
(set-info :category "industrial")
(set-info :status unsat)
;; MathSAT API call trace
;; generated on Mon Mar 19 10:49:39 2012
(declare-fun b.counter.0__AT0 () Bool)
(declare-fun b.counter.1__AT0 () Bool)
(declare-fun b.counter.2__AT0 () Bool)
(declare-fun b.delta__AT0 () Real)
(declare-fun b.EVENT.0__AT0 () Bool)
(declare-fun b.EVENT.1__AT0 () Bool)
(declare-fun b.speed_loss__AT0 () Real)
(declare-fun b.counter.3__AT0 () Bool)
(declare-fun b.x__AT0 () Real)
(declare-fun b.speed_y__AT0 () Real)
(declare-fun b.event_is_timed__AT0 () Bool)
(declare-fun b.speed_x__AT0 () Real)
(declare-fun b.time__AT0 () Real)
(declare-fun b.y__AT0 () Real)
(assert (let ((.def_171 (* (- 49.0) b.delta__AT0)))
(let ((.def_173 (* 5.0 b.speed_y__AT0)))
(let ((.def_175 (+ .def_173 .def_171)))
(let ((.def_178 (<= 0.0 .def_175)))
(let ((.def_96 (* b.y__AT0 b.speed_y__AT0)))
(let ((.def_139 (* 2.0 .def_96)))
(let ((.def_140 (+ b.speed_x__AT0 .def_139)))
(let ((.def_144 (<= .def_140 0.0 )))
(let ((.def_179 (and .def_144 .def_178)))
(let ((.def_176 (<= .def_175 0.0 )))
(let ((.def_141 (<= 0.0 .def_140)))
(let ((.def_177 (and .def_141 .def_176)))
(let ((.def_180 (or .def_177 .def_179)))
(let ((.def_83 (* (- (/ 49 10)) b.speed_y__AT0)))
(let ((.def_115 (* 3.0 .def_83)))
(let ((.def_151 (* 2.0 .def_115)))
(let ((.def_152 (* b.delta__AT0 .def_151)))
(let ((.def_154 (* (- 50.0) .def_152)))
(let ((.def_88 (* b.speed_y__AT0 b.speed_y__AT0)))
(let ((.def_156 (* (- 50.0) .def_88)))
(let ((.def_161 (+ .def_156 .def_154)))
(let ((.def_74 (* b.delta__AT0 b.delta__AT0)))
(let ((.def_150 (* (- 7203.0) .def_74)))
(let ((.def_162 (+ .def_150 .def_161)))
(let ((.def_159 (* 490.0 b.y__AT0)))
(let ((.def_163 (+ .def_159 .def_162)))
(let ((.def_166 (<= 0.0 .def_163)))
(let ((.def_167 (and .def_144 .def_166)))
(let ((.def_164 (<= .def_163 0.0 )))
(let ((.def_165 (and .def_141 .def_164)))
(let ((.def_168 (or .def_165 .def_167)))
(let ((.def_92 (* (- (/ 49 10)) b.y__AT0)))
(let ((.def_125 (* 2.0 .def_92)))
(let ((.def_126 (* b.delta__AT0 .def_125)))
(let ((.def_127 (* 50.0 .def_126)))
(let ((.def_120 (* 2.0 .def_88)))
(let ((.def_121 (* b.delta__AT0 .def_120)))
(let ((.def_123 (* 25.0 .def_121)))
(let ((.def_133 (+ .def_123 .def_127)))
(let ((.def_116 (* .def_74 .def_115)))
(let ((.def_118 (* 50.0 .def_116)))
(let ((.def_134 (+ .def_118 .def_133)))
(let ((.def_129 (* 50.0 .def_96)))
(let ((.def_135 (+ .def_129 .def_134)))
(let ((.def_75 (* b.delta__AT0 .def_74)))
(let ((.def_113 (* 2401.0 .def_75)))
(let ((.def_136 (+ .def_113 .def_135)))
(let ((.def_131 (* 25.0 b.speed_x__AT0)))
(let ((.def_137 (+ .def_131 .def_136)))
(let ((.def_143 (<= .def_137 0.0 )))
(let ((.def_145 (and .def_143 .def_144)))
(let ((.def_138 (<= 0.0 .def_137)))
(let ((.def_142 (and .def_138 .def_141)))
(let ((.def_146 (or .def_142 .def_145)))
(let ((.def_97 (* b.delta__AT0 .def_96)))
(let ((.def_98 (* 200.0 .def_97)))
(let ((.def_93 (* .def_74 .def_92)))
(let ((.def_94 (* 200.0 .def_93)))
(let ((.def_104 (+ .def_94 .def_98)))
(let ((.def_89 (* .def_74 .def_88)))
(let ((.def_90 (* 100.0 .def_89)))
(let ((.def_105 (+ .def_90 .def_104)))
(let ((.def_84 (* .def_75 .def_83)))
(let ((.def_86 (* 200.0 .def_84)))
(let ((.def_106 (+ .def_86 .def_105)))
(let ((.def_76 (* b.delta__AT0 .def_75)))
(let ((.def_78 (* 2401.0 .def_76)))
(let ((.def_107 (+ .def_78 .def_106)))
(let ((.def_71 (* b.speed_x__AT0 b.delta__AT0)))
(let ((.def_73 (* 100.0 .def_71)))
(let ((.def_108 (+ .def_73 .def_107)))
(let ((.def_56 (* b.y__AT0 b.y__AT0)))
(let ((.def_100 (* 100.0 .def_56)))
(let ((.def_109 (+ .def_100 .def_108)))
(let ((.def_102 (* 100.0 b.x__AT0)))
(let ((.def_110 (+ .def_102 .def_109)))
(let ((.def_111 (<= 0.0 .def_110)))
(let ((.def_57 (+ b.x__AT0 .def_56)))
(let ((.def_58 (<= 0.0 .def_57)))
(let ((.def_112 (and .def_58 .def_111)))
(let ((.def_147 (and .def_112 .def_146)))
(let ((.def_169 (and .def_147 .def_168)))
(let ((.def_181 (and .def_169 .def_180)))
(let ((.def_64 (<= b.speed_loss__AT0 (/ 1 2))))
(let ((.def_61 (<= (/ 1 10) b.speed_loss__AT0)))
(let ((.def_65 (and .def_61 .def_64)))
(let ((.def_182 (and .def_65 .def_181)))
(let ((.def_66 (and .def_58 .def_65)))
(let ((.def_53 (not b.EVENT.0__AT0)))
(let ((.def_51 (not b.EVENT.1__AT0)))
(let ((.def_54 (or .def_51 .def_53)))
(let ((.def_9 (not b.counter.0__AT0)))
(let ((.def_6 (not b.counter.1__AT0)))
(let ((.def_44 (or .def_6 .def_9)))
(let ((.def_48 (or b.counter.3__AT0 .def_44)))
(let ((.def_45 (or b.counter.2__AT0 .def_44)))
(let ((.def_4 (not b.counter.2__AT0)))
(let ((.def_43 (or .def_4 .def_9)))
(let ((.def_46 (and .def_43 .def_45)))
(let ((.def_14 (not b.counter.3__AT0)))
(let ((.def_47 (or .def_14 .def_46)))
(let ((.def_49 (and .def_47 .def_48)))
(let ((.def_55 (and .def_49 .def_54)))
(let ((.def_67 (and .def_55 .def_66)))
(let ((.def_10 (and .def_6 .def_9)))
(let ((.def_40 (and .def_4 .def_10)))
(let ((.def_41 (and .def_14 .def_40)))
(let ((.def_38 (= b.speed_y__AT0 1.0 )))
(let ((.def_35 (= b.speed_x__AT0 1.0 )))
(let ((.def_31 (= b.y__AT0 10.0 )))
(let ((.def_27 (= b.x__AT0 (- 9.0) )))
(let ((.def_21 (= b.time__AT0 0.0 )))
(let ((.def_23 (and .def_21 b.event_is_timed__AT0)))
(let ((.def_28 (and .def_23 .def_27)))
(let ((.def_32 (and .def_28 .def_31)))
(let ((.def_36 (and .def_32 .def_35)))
(let ((.def_39 (and .def_36 .def_38)))
(let ((.def_42 (and .def_39 .def_41)))
(let ((.def_68 (and .def_42 .def_67)))
(let ((.def_16 (or .def_10 b.counter.3__AT0)))
(let ((.def_11 (or b.counter.2__AT0 .def_10)))
(let ((.def_7 (or .def_4 .def_6)))
(let ((.def_12 (and .def_7 .def_11)))
(let ((.def_15 (or .def_12 .def_14)))
(let ((.def_17 (and .def_15 .def_16)))
(let ((.def_18 (not .def_17)))
(let ((.def_69 (and .def_18 .def_68)))
(let ((.def_183 (and .def_69 .def_182)))
.def_183)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
