(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |Benchmarks generated from hycomp (https://es-static.fbk.eu/tools/hycomp/). BMC instances of non-linear hybrid automata taken from: Alessandro Cimatti, Sergio Mover, Stefano Tonetta, A quantifier-free SMT encoding of non-linear hybrid automata, FMCAD 2012 and Alessandro Cimatti, Sergio Mover, Stefano Tonetta, Quantier-free encoding of invariants for Hybrid Systems, Formal Methods in System Design. This instance solves a BMC problem of depth 0 and uses the quantifier free encoding with lemmas encoding. Contacts: Sergio Mover (mover@fbk.eu), Stefano Tonetta (tonettas@fbk.eu), Alessandro Cimatti (cimatti@fbk.eu).|)
(set-info :category "industrial")
(set-info :status unsat)
;; MathSAT API call trace
;; generated on Mon Mar 19 10:37:38 2012
(declare-fun speed_loss__AT0 () Real)
(declare-fun b.counter.2__AT0 () Bool)
(declare-fun b.time__AT0 () Real)
(declare-fun b.speed_y__AT0 () Real)
(declare-fun b.EVENT.1__AT0 () Bool)
(declare-fun b.delta__AT0 () Real)
(declare-fun b.y__AT0 () Real)
(declare-fun b.event_is_timed__AT0 () Bool)
(declare-fun b.counter.0__AT0 () Bool)
(declare-fun b.counter.1__AT0 () Bool)
(declare-fun b.counter.3__AT0 () Bool)
(declare-fun b.EVENT.0__AT0 () Bool)
(assert (let ((.def_94 (<= b.speed_y__AT0 0.0 )))
(let ((.def_75 (* (- 49.0) b.delta__AT0)))
(let ((.def_77 (* 5.0 b.speed_y__AT0)))
(let ((.def_79 (+ .def_77 .def_75)))
(let ((.def_92 (<= .def_79 0.0 )))
(let ((.def_111 (and .def_92 .def_94)))
(let ((.def_80 (<= 0.0 .def_79)))
(let ((.def_81 (not .def_80)))
(let ((.def_73 (<= 0.0 b.speed_y__AT0)))
(let ((.def_108 (or .def_73 .def_81)))
(let ((.def_95 (not .def_94)))
(let ((.def_107 (or .def_92 .def_95)))
(let ((.def_109 (and .def_107 .def_108)))
(let ((.def_112 (and .def_109 .def_111)))
(let ((.def_106 (and .def_73 .def_80)))
(let ((.def_110 (and .def_106 .def_109)))
(let ((.def_113 (or .def_110 .def_112)))
(let ((.def_65 (* b.speed_y__AT0 b.delta__AT0)))
(let ((.def_66 (* 10.0 .def_65)))
(let ((.def_61 (* b.delta__AT0 b.delta__AT0)))
(let ((.def_64 (* (- 49.0) .def_61)))
(let ((.def_67 (+ .def_64 .def_66)))
(let ((.def_68 (* 10.0 b.y__AT0)))
(let ((.def_70 (+ .def_68 .def_67)))
(let ((.def_86 (<= .def_70 0.0 )))
(let ((.def_100 (not .def_86)))
(let ((.def_84 (<= b.y__AT0 0.0 )))
(let ((.def_101 (or .def_84 .def_100)))
(let ((.def_47 (<= 0.0 b.y__AT0)))
(let ((.def_98 (not .def_47)))
(let ((.def_71 (<= 0.0 .def_70)))
(let ((.def_99 (or .def_71 .def_98)))
(let ((.def_102 (and .def_99 .def_101)))
(let ((.def_93 (not .def_92)))
(let ((.def_96 (or .def_93 .def_95)))
(let ((.def_97 (not .def_96)))
(let ((.def_103 (or .def_97 .def_102)))
(let ((.def_88 (not .def_71)))
(let ((.def_89 (or .def_47 .def_88)))
(let ((.def_85 (not .def_84)))
(let ((.def_87 (or .def_85 .def_86)))
(let ((.def_90 (and .def_87 .def_89)))
(let ((.def_74 (not .def_73)))
(let ((.def_82 (or .def_74 .def_81)))
(let ((.def_83 (not .def_82)))
(let ((.def_91 (or .def_83 .def_90)))
(let ((.def_104 (and .def_91 .def_103)))
(let ((.def_72 (and .def_47 .def_71)))
(let ((.def_105 (and .def_72 .def_104)))
(let ((.def_114 (and .def_105 .def_113)))
(let ((.def_54 (<= speed_loss__AT0 (/ 1 2))))
(let ((.def_51 (<= (/ 1 10) speed_loss__AT0)))
(let ((.def_55 (and .def_51 .def_54)))
(let ((.def_115 (and .def_55 .def_114)))
(let ((.def_56 (and .def_47 .def_55)))
(let ((.def_44 (not b.EVENT.0__AT0)))
(let ((.def_42 (not b.EVENT.1__AT0)))
(let ((.def_45 (or .def_42 .def_44)))
(let ((.def_9 (not b.counter.0__AT0)))
(let ((.def_6 (not b.counter.1__AT0)))
(let ((.def_35 (or .def_6 .def_9)))
(let ((.def_39 (or b.counter.3__AT0 .def_35)))
(let ((.def_36 (or b.counter.2__AT0 .def_35)))
(let ((.def_4 (not b.counter.2__AT0)))
(let ((.def_34 (or .def_4 .def_9)))
(let ((.def_37 (and .def_34 .def_36)))
(let ((.def_14 (not b.counter.3__AT0)))
(let ((.def_38 (or .def_14 .def_37)))
(let ((.def_40 (and .def_38 .def_39)))
(let ((.def_46 (and .def_40 .def_45)))
(let ((.def_57 (and .def_46 .def_56)))
(let ((.def_10 (and .def_6 .def_9)))
(let ((.def_31 (and .def_4 .def_10)))
(let ((.def_32 (and .def_14 .def_31)))
(let ((.def_29 (= b.speed_y__AT0 0.0 )))
(let ((.def_26 (= b.y__AT0 10.0 )))
(let ((.def_21 (= b.time__AT0 0.0 )))
(let ((.def_23 (and .def_21 b.event_is_timed__AT0)))
(let ((.def_27 (and .def_23 .def_26)))
(let ((.def_30 (and .def_27 .def_29)))
(let ((.def_33 (and .def_30 .def_32)))
(let ((.def_58 (and .def_33 .def_57)))
(let ((.def_16 (or .def_10 b.counter.3__AT0)))
(let ((.def_11 (or b.counter.2__AT0 .def_10)))
(let ((.def_7 (or .def_4 .def_6)))
(let ((.def_12 (and .def_7 .def_11)))
(let ((.def_15 (or .def_12 .def_14)))
(let ((.def_17 (and .def_15 .def_16)))
(let ((.def_18 (not .def_17)))
(let ((.def_59 (and .def_18 .def_58)))
(let ((.def_116 (and .def_59 .def_115)))
.def_116))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
