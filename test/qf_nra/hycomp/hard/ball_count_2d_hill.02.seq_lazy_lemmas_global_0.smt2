(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |Benchmarks generated from hycomp (https://es-static.fbk.eu/tools/hycomp/). BMC instances of non-linear hybrid automata taken from: Alessandro Cimatti, Sergio Mover, Stefano Tonetta, A quantifier-free SMT encoding of non-linear hybrid automata, FMCAD 2012 and Alessandro Cimatti, Sergio Mover, Stefano Tonetta, Quantier-free encoding of invariants for Hybrid Systems, Formal Methods in System Design. This instance solves a BMC problem of depth 0 and uses the quantifier free encoding with lemmas encoding. Contacts: Sergio Mover (mover@fbk.eu), Stefano Tonetta (tonettas@fbk.eu), Alessandro Cimatti (cimatti@fbk.eu).|)
(set-info :category "industrial")
(set-info :status unsat)
;; MathSAT API call trace
;; generated on Mon Mar 19 10:43:06 2012
(declare-fun b.x__AT0 () Real)
(declare-fun b.speed_y__AT0 () Real)
(declare-fun b.event_is_timed__AT0 () Bool)
(declare-fun b.speed_x__AT0 () Real)
(declare-fun b.time__AT0 () Real)
(declare-fun b.y__AT0 () Real)
(declare-fun b.counter.0__AT0 () Bool)
(declare-fun b.counter.1__AT0 () Bool)
(declare-fun b.counter.2__AT0 () Bool)
(declare-fun b.delta__AT0 () Real)
(declare-fun b.EVENT.0__AT0 () Bool)
(declare-fun b.EVENT.1__AT0 () Bool)
(declare-fun b.speed_loss__AT0 () Real)
(declare-fun b.counter.3__AT0 () Bool)
(assert (let ((.def_67 (* (- 1.0) b.speed_x__AT0)))
(let ((.def_68 (* b.speed_x__AT0 .def_67)))
(let ((.def_69 (* (- 1.0) .def_68)))
(let ((.def_100 (* 2.0 .def_69)))
(let ((.def_162 (* (- 1.0) .def_100)))
(let ((.def_163 (* b.delta__AT0 .def_162)))
(let ((.def_164 (* (- 5.0) .def_163)))
(let ((.def_49 (* (- 1.0) b.x__AT0)))
(let ((.def_82 (* b.speed_x__AT0 .def_49)))
(let ((.def_107 (* (- 5.0) .def_82)))
(let ((.def_169 (+ .def_107 .def_164)))
(let ((.def_77 (* b.x__AT0 .def_67)))
(let ((.def_105 (* (- 5.0) .def_77)))
(let ((.def_170 (+ .def_105 .def_169)))
(let ((.def_109 (* (- 49.0) b.delta__AT0)))
(let ((.def_171 (+ .def_109 .def_170)))
(let ((.def_111 (* 5.0 b.speed_y__AT0)))
(let ((.def_172 (+ .def_111 .def_171)))
(let ((.def_175 (<= 0.0 .def_172)))
(let ((.def_182 (not .def_175)))
(let ((.def_83 (* (- 1.0) .def_82)))
(let ((.def_78 (* (- 1.0) .def_77)))
(let ((.def_119 (+ .def_78 .def_83)))
(let ((.def_120 (+ b.speed_y__AT0 .def_119)))
(let ((.def_121 (<= 0.0 .def_120)))
(let ((.def_183 (or .def_121 .def_182)))
(let ((.def_173 (<= .def_172 0.0 )))
(let ((.def_135 (<= .def_120 0.0 )))
(let ((.def_136 (not .def_135)))
(let ((.def_181 (or .def_136 .def_173)))
(let ((.def_184 (and .def_181 .def_183)))
(let ((.def_153 (<= .def_68 (- (/ 49 10)))))
(let ((.def_185 (or .def_153 .def_184)))
(let ((.def_177 (not .def_173)))
(let ((.def_178 (or .def_135 .def_177)))
(let ((.def_122 (not .def_121)))
(let ((.def_176 (or .def_122 .def_175)))
(let ((.def_179 (and .def_176 .def_178)))
(let ((.def_158 (<= (- (/ 49 10)) .def_68)))
(let ((.def_180 (or .def_158 .def_179)))
(let ((.def_186 (and .def_180 .def_185)))
(let ((.def_174 (and .def_135 .def_173)))
(let ((.def_187 (and .def_174 .def_186)))
(let ((.def_101 (* b.delta__AT0 .def_100)))
(let ((.def_103 (* 5.0 .def_101)))
(let ((.def_113 (+ .def_107 .def_103)))
(let ((.def_114 (+ .def_105 .def_113)))
(let ((.def_115 (+ .def_109 .def_114)))
(let ((.def_116 (+ .def_111 .def_115)))
(let ((.def_133 (<= .def_116 0.0 )))
(let ((.def_134 (not .def_133)))
(let ((.def_156 (or .def_134 .def_135)))
(let ((.def_117 (<= 0.0 .def_116)))
(let ((.def_155 (or .def_117 .def_122)))
(let ((.def_157 (and .def_155 .def_156)))
(let ((.def_159 (or .def_157 .def_158)))
(let ((.def_118 (not .def_117)))
(let ((.def_149 (or .def_118 .def_121)))
(let ((.def_148 (or .def_133 .def_136)))
(let ((.def_150 (and .def_148 .def_149)))
(let ((.def_154 (or .def_150 .def_153)))
(let ((.def_160 (and .def_154 .def_159)))
(let ((.def_147 (and .def_117 .def_121)))
(let ((.def_161 (and .def_147 .def_160)))
(let ((.def_188 (or .def_161 .def_187)))
(let ((.def_84 (* b.delta__AT0 .def_83)))
(let ((.def_85 (* 10.0 .def_84)))
(let ((.def_79 (* b.delta__AT0 .def_78)))
(let ((.def_80 (* 10.0 .def_79)))
(let ((.def_92 (+ .def_80 .def_85)))
(let ((.def_66 (* b.delta__AT0 b.delta__AT0)))
(let ((.def_70 (* .def_66 .def_69)))
(let ((.def_71 (* 10.0 .def_70)))
(let ((.def_93 (+ .def_71 .def_92)))
(let ((.def_75 (* (- 49.0) .def_66)))
(let ((.def_94 (+ .def_75 .def_93)))
(let ((.def_64 (* b.speed_y__AT0 b.delta__AT0)))
(let ((.def_65 (* 10.0 .def_64)))
(let ((.def_95 (+ .def_65 .def_94)))
(let ((.def_50 (* b.x__AT0 .def_49)))
(let ((.def_88 (* (- 10.0) .def_50)))
(let ((.def_96 (+ .def_88 .def_95)))
(let ((.def_90 (* 10.0 b.y__AT0)))
(let ((.def_97 (+ .def_90 .def_96)))
(let ((.def_127 (<= .def_97 0.0 )))
(let ((.def_141 (not .def_127)))
(let ((.def_125 (<= b.y__AT0 .def_50)))
(let ((.def_142 (or .def_125 .def_141)))
(let ((.def_51 (<= .def_50 b.y__AT0)))
(let ((.def_139 (not .def_51)))
(let ((.def_98 (<= 0.0 .def_97)))
(let ((.def_140 (or .def_98 .def_139)))
(let ((.def_143 (and .def_140 .def_142)))
(let ((.def_137 (or .def_134 .def_136)))
(let ((.def_138 (not .def_137)))
(let ((.def_144 (or .def_138 .def_143)))
(let ((.def_129 (not .def_98)))
(let ((.def_130 (or .def_51 .def_129)))
(let ((.def_126 (not .def_125)))
(let ((.def_128 (or .def_126 .def_127)))
(let ((.def_131 (and .def_128 .def_130)))
(let ((.def_123 (or .def_118 .def_122)))
(let ((.def_124 (not .def_123)))
(let ((.def_132 (or .def_124 .def_131)))
(let ((.def_145 (and .def_132 .def_144)))
(let ((.def_99 (and .def_51 .def_98)))
(let ((.def_146 (and .def_99 .def_145)))
(let ((.def_189 (and .def_146 .def_188)))
(let ((.def_57 (<= b.speed_loss__AT0 (/ 1 2))))
(let ((.def_54 (<= (/ 1 10) b.speed_loss__AT0)))
(let ((.def_58 (and .def_54 .def_57)))
(let ((.def_190 (and .def_58 .def_189)))
(let ((.def_59 (and .def_51 .def_58)))
(let ((.def_45 (not b.EVENT.0__AT0)))
(let ((.def_43 (not b.EVENT.1__AT0)))
(let ((.def_46 (or .def_43 .def_45)))
(let ((.def_6 (not b.counter.0__AT0)))
(let ((.def_4 (not b.counter.1__AT0)))
(let ((.def_36 (or .def_4 .def_6)))
(let ((.def_40 (or b.counter.3__AT0 .def_36)))
(let ((.def_37 (or b.counter.2__AT0 .def_36)))
(let ((.def_9 (not b.counter.2__AT0)))
(let ((.def_35 (or .def_6 .def_9)))
(let ((.def_38 (and .def_35 .def_37)))
(let ((.def_32 (not b.counter.3__AT0)))
(let ((.def_39 (or .def_32 .def_38)))
(let ((.def_41 (and .def_39 .def_40)))
(let ((.def_47 (and .def_41 .def_46)))
(let ((.def_60 (and .def_47 .def_59)))
(let ((.def_7 (and .def_4 .def_6)))
(let ((.def_10 (and .def_7 .def_9)))
(let ((.def_33 (and .def_10 .def_32)))
(let ((.def_29 (= b.speed_y__AT0 1.0 )))
(let ((.def_26 (= b.speed_x__AT0 1.0 )))
(let ((.def_22 (= b.y__AT0 10.0 )))
(let ((.def_18 (= b.x__AT0 0.0 )))
(let ((.def_14 (= b.time__AT0 0.0 )))
(let ((.def_16 (and .def_14 b.event_is_timed__AT0)))
(let ((.def_19 (and .def_16 .def_18)))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_27 (and .def_23 .def_26)))
(let ((.def_30 (and .def_27 .def_29)))
(let ((.def_34 (and .def_30 .def_33)))
(let ((.def_61 (and .def_34 .def_60)))
(let ((.def_11 (not .def_10)))
(let ((.def_62 (and .def_11 .def_61)))
(let ((.def_191 (and .def_62 .def_190)))
.def_191))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
