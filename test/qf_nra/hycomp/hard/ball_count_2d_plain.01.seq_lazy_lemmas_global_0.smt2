(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |Benchmarks generated from hycomp (https://es-static.fbk.eu/tools/hycomp/). BMC instances of non-linear hybrid automata taken from: Alessandro Cimatti, Sergio Mover, Stefano Tonetta, A quantifier-free SMT encoding of non-linear hybrid automata, FMCAD 2012 and Alessandro Cimatti, Sergio Mover, Stefano Tonetta, Quantier-free encoding of invariants for Hybrid Systems, Formal Methods in System Design. This instance solves a BMC problem of depth 0 and uses the quantifier free encoding with lemmas encoding. Contacts: Sergio Mover (mover@fbk.eu), Stefano Tonetta (tonettas@fbk.eu), Alessandro Cimatti (cimatti@fbk.eu).|)
(set-info :category "industrial")
(set-info :status unsat)
;; MathSAT API call trace
;; generated on Mon Mar 19 10:41:23 2012
(declare-fun b.delta__AT0 () Real)
(declare-fun b.EVENT.0__AT0 () Bool)
(declare-fun speed_loss__AT0 () Real)
(declare-fun b.counter.3__AT0 () Bool)
(declare-fun b.speed_y__AT0 () Real)
(declare-fun b.EVENT.1__AT0 () Bool)
(declare-fun b.time__AT0 () Real)
(declare-fun b.y__AT0 () Real)
(declare-fun b.counter.0__AT0 () Bool)
(declare-fun b.counter.1__AT0 () Bool)
(declare-fun g__AT0 () Real)
(declare-fun b.event_is_timed__AT0 () Bool)
(declare-fun b.counter.2__AT0 () Bool)
(assert (let ((.def_63 (* (- 1.0) g__AT0)))
(let ((.def_64 (* (/ 1 2) .def_63)))
(let ((.def_71 (* 2.0 .def_64)))
(let ((.def_115 (* (- 1.0) .def_71)))
(let ((.def_116 (* b.delta__AT0 .def_115)))
(let ((.def_119 (<= .def_116 b.speed_y__AT0)))
(let ((.def_126 (not .def_119)))
(let ((.def_76 (<= 0.0 b.speed_y__AT0)))
(let ((.def_127 (or .def_76 .def_126)))
(let ((.def_117 (<= b.speed_y__AT0 .def_116)))
(let ((.def_90 (<= b.speed_y__AT0 0.0 )))
(let ((.def_91 (not .def_90)))
(let ((.def_125 (or .def_91 .def_117)))
(let ((.def_128 (and .def_125 .def_127)))
(let ((.def_106 (<= g__AT0 0.0 )))
(let ((.def_129 (or .def_106 .def_128)))
(let ((.def_121 (not .def_117)))
(let ((.def_122 (or .def_90 .def_121)))
(let ((.def_77 (not .def_76)))
(let ((.def_120 (or .def_77 .def_119)))
(let ((.def_123 (and .def_120 .def_122)))
(let ((.def_111 (<= 0.0 g__AT0)))
(let ((.def_124 (or .def_111 .def_123)))
(let ((.def_130 (and .def_124 .def_129)))
(let ((.def_118 (and .def_90 .def_117)))
(let ((.def_131 (and .def_118 .def_130)))
(let ((.def_72 (* b.delta__AT0 .def_71)))
(let ((.def_73 (+ b.speed_y__AT0 .def_72)))
(let ((.def_88 (<= .def_73 0.0 )))
(let ((.def_89 (not .def_88)))
(let ((.def_109 (or .def_89 .def_90)))
(let ((.def_74 (<= 0.0 .def_73)))
(let ((.def_108 (or .def_74 .def_77)))
(let ((.def_110 (and .def_108 .def_109)))
(let ((.def_112 (or .def_110 .def_111)))
(let ((.def_75 (not .def_74)))
(let ((.def_104 (or .def_75 .def_76)))
(let ((.def_103 (or .def_88 .def_91)))
(let ((.def_105 (and .def_103 .def_104)))
(let ((.def_107 (or .def_105 .def_106)))
(let ((.def_113 (and .def_107 .def_112)))
(let ((.def_102 (and .def_74 .def_76)))
(let ((.def_114 (and .def_102 .def_113)))
(let ((.def_132 (or .def_114 .def_131)))
(let ((.def_66 (* b.speed_y__AT0 b.delta__AT0)))
(let ((.def_61 (* b.delta__AT0 b.delta__AT0)))
(let ((.def_65 (* .def_61 .def_64)))
(let ((.def_67 (+ .def_65 .def_66)))
(let ((.def_68 (+ b.y__AT0 .def_67)))
(let ((.def_82 (<= .def_68 0.0 )))
(let ((.def_96 (not .def_82)))
(let ((.def_80 (<= b.y__AT0 0.0 )))
(let ((.def_97 (or .def_80 .def_96)))
(let ((.def_55 (<= 0.0 b.y__AT0)))
(let ((.def_94 (not .def_55)))
(let ((.def_69 (<= 0.0 .def_68)))
(let ((.def_95 (or .def_69 .def_94)))
(let ((.def_98 (and .def_95 .def_97)))
(let ((.def_92 (or .def_89 .def_91)))
(let ((.def_93 (not .def_92)))
(let ((.def_99 (or .def_93 .def_98)))
(let ((.def_84 (not .def_69)))
(let ((.def_85 (or .def_55 .def_84)))
(let ((.def_81 (not .def_80)))
(let ((.def_83 (or .def_81 .def_82)))
(let ((.def_86 (and .def_83 .def_85)))
(let ((.def_78 (or .def_75 .def_77)))
(let ((.def_79 (not .def_78)))
(let ((.def_87 (or .def_79 .def_86)))
(let ((.def_100 (and .def_87 .def_99)))
(let ((.def_70 (and .def_55 .def_69)))
(let ((.def_101 (and .def_70 .def_100)))
(let ((.def_133 (and .def_101 .def_132)))
(let ((.def_44 (<= g__AT0 10.0 )))
(let ((.def_43 (<= 8.0 g__AT0)))
(let ((.def_45 (and .def_43 .def_44)))
(let ((.def_134 (and .def_45 .def_133)))
(let ((.def_52 (<= speed_loss__AT0 (/ 1 2))))
(let ((.def_49 (<= (/ 1 10) speed_loss__AT0)))
(let ((.def_53 (and .def_49 .def_52)))
(let ((.def_135 (and .def_53 .def_134)))
(let ((.def_54 (and .def_45 .def_53)))
(let ((.def_56 (and .def_54 .def_55)))
(let ((.def_38 (not b.EVENT.0__AT0)))
(let ((.def_36 (not b.EVENT.1__AT0)))
(let ((.def_39 (or .def_36 .def_38)))
(let ((.def_6 (not b.counter.0__AT0)))
(let ((.def_4 (not b.counter.1__AT0)))
(let ((.def_29 (or .def_4 .def_6)))
(let ((.def_33 (or b.counter.3__AT0 .def_29)))
(let ((.def_30 (or b.counter.2__AT0 .def_29)))
(let ((.def_9 (not b.counter.2__AT0)))
(let ((.def_28 (or .def_6 .def_9)))
(let ((.def_31 (and .def_28 .def_30)))
(let ((.def_12 (not b.counter.3__AT0)))
(let ((.def_32 (or .def_12 .def_31)))
(let ((.def_34 (and .def_32 .def_33)))
(let ((.def_40 (and .def_34 .def_39)))
(let ((.def_57 (and .def_40 .def_56)))
(let ((.def_25 (= b.speed_y__AT0 0.0 )))
(let ((.def_22 (= b.y__AT0 10.0 )))
(let ((.def_17 (= b.time__AT0 0.0 )))
(let ((.def_19 (and .def_17 b.event_is_timed__AT0)))
(let ((.def_23 (and .def_19 .def_22)))
(let ((.def_26 (and .def_23 .def_25)))
(let ((.def_7 (and .def_4 .def_6)))
(let ((.def_10 (and .def_7 .def_9)))
(let ((.def_13 (and .def_10 .def_12)))
(let ((.def_27 (and .def_13 .def_26)))
(let ((.def_58 (and .def_27 .def_57)))
(let ((.def_14 (not .def_13)))
(let ((.def_59 (and .def_14 .def_58)))
(let ((.def_136 (and .def_59 .def_135)))
.def_136))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
