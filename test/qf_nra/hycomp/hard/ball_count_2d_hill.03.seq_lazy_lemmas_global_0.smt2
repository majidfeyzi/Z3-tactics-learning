(set-info :smt-lib-version 2.6)
(set-logic QF_NRA)
(set-info :source |Benchmarks generated from hycomp (https://es-static.fbk.eu/tools/hycomp/). BMC instances of non-linear hybrid automata taken from: Alessandro Cimatti, Sergio Mover, Stefano Tonetta, A quantifier-free SMT encoding of non-linear hybrid automata, FMCAD 2012 and Alessandro Cimatti, Sergio Mover, Stefano Tonetta, Quantier-free encoding of invariants for Hybrid Systems, Formal Methods in System Design. This instance solves a BMC problem of depth 0 and uses the quantifier free encoding with lemmas encoding. Contacts: Sergio Mover (mover@fbk.eu), Stefano Tonetta (tonettas@fbk.eu), Alessandro Cimatti (cimatti@fbk.eu).|)
(set-info :category "industrial")
(set-info :status unsat)
;; MathSAT API call trace
;; generated on Mon Mar 19 10:36:38 2012
(declare-fun b.x__AT0 () Real)
(declare-fun b.speed_y__AT0 () Real)
(declare-fun b.event_is_timed__AT0 () Bool)
(declare-fun b.speed_x__AT0 () Real)
(declare-fun b.time__AT0 () Real)
(declare-fun b.y__AT0 () Real)
(declare-fun b.counter.0__AT0 () Bool)
(declare-fun b.counter.1__AT0 () Bool)
(declare-fun b.counter.2__AT0 () Bool)
(declare-fun b.delta__AT0 () Real)
(declare-fun b.EVENT.0__AT0 () Bool)
(declare-fun b.EVENT.1__AT0 () Bool)
(declare-fun b.speed_loss__AT0 () Real)
(declare-fun b.counter.3__AT0 () Bool)
(assert (let ((.def_70 (* (- 1.0) b.speed_x__AT0)))
(let ((.def_71 (* b.speed_x__AT0 .def_70)))
(let ((.def_72 (* (- 1.0) .def_71)))
(let ((.def_103 (* 2.0 .def_72)))
(let ((.def_165 (* (- 1.0) .def_103)))
(let ((.def_166 (* b.delta__AT0 .def_165)))
(let ((.def_167 (* (- 5.0) .def_166)))
(let ((.def_52 (* (- 1.0) b.x__AT0)))
(let ((.def_85 (* b.speed_x__AT0 .def_52)))
(let ((.def_110 (* (- 5.0) .def_85)))
(let ((.def_172 (+ .def_110 .def_167)))
(let ((.def_80 (* b.x__AT0 .def_70)))
(let ((.def_108 (* (- 5.0) .def_80)))
(let ((.def_173 (+ .def_108 .def_172)))
(let ((.def_112 (* (- 49.0) b.delta__AT0)))
(let ((.def_174 (+ .def_112 .def_173)))
(let ((.def_114 (* 5.0 b.speed_y__AT0)))
(let ((.def_175 (+ .def_114 .def_174)))
(let ((.def_178 (<= 0.0 .def_175)))
(let ((.def_185 (not .def_178)))
(let ((.def_86 (* (- 1.0) .def_85)))
(let ((.def_81 (* (- 1.0) .def_80)))
(let ((.def_122 (+ .def_81 .def_86)))
(let ((.def_123 (+ b.speed_y__AT0 .def_122)))
(let ((.def_124 (<= 0.0 .def_123)))
(let ((.def_186 (or .def_124 .def_185)))
(let ((.def_176 (<= .def_175 0.0 )))
(let ((.def_138 (<= .def_123 0.0 )))
(let ((.def_139 (not .def_138)))
(let ((.def_184 (or .def_139 .def_176)))
(let ((.def_187 (and .def_184 .def_186)))
(let ((.def_156 (<= .def_71 (- (/ 49 10)))))
(let ((.def_188 (or .def_156 .def_187)))
(let ((.def_180 (not .def_176)))
(let ((.def_181 (or .def_138 .def_180)))
(let ((.def_125 (not .def_124)))
(let ((.def_179 (or .def_125 .def_178)))
(let ((.def_182 (and .def_179 .def_181)))
(let ((.def_161 (<= (- (/ 49 10)) .def_71)))
(let ((.def_183 (or .def_161 .def_182)))
(let ((.def_189 (and .def_183 .def_188)))
(let ((.def_177 (and .def_138 .def_176)))
(let ((.def_190 (and .def_177 .def_189)))
(let ((.def_104 (* b.delta__AT0 .def_103)))
(let ((.def_106 (* 5.0 .def_104)))
(let ((.def_116 (+ .def_110 .def_106)))
(let ((.def_117 (+ .def_108 .def_116)))
(let ((.def_118 (+ .def_112 .def_117)))
(let ((.def_119 (+ .def_114 .def_118)))
(let ((.def_136 (<= .def_119 0.0 )))
(let ((.def_137 (not .def_136)))
(let ((.def_159 (or .def_137 .def_138)))
(let ((.def_120 (<= 0.0 .def_119)))
(let ((.def_158 (or .def_120 .def_125)))
(let ((.def_160 (and .def_158 .def_159)))
(let ((.def_162 (or .def_160 .def_161)))
(let ((.def_121 (not .def_120)))
(let ((.def_152 (or .def_121 .def_124)))
(let ((.def_151 (or .def_136 .def_139)))
(let ((.def_153 (and .def_151 .def_152)))
(let ((.def_157 (or .def_153 .def_156)))
(let ((.def_163 (and .def_157 .def_162)))
(let ((.def_150 (and .def_120 .def_124)))
(let ((.def_164 (and .def_150 .def_163)))
(let ((.def_191 (or .def_164 .def_190)))
(let ((.def_87 (* b.delta__AT0 .def_86)))
(let ((.def_88 (* 10.0 .def_87)))
(let ((.def_82 (* b.delta__AT0 .def_81)))
(let ((.def_83 (* 10.0 .def_82)))
(let ((.def_95 (+ .def_83 .def_88)))
(let ((.def_69 (* b.delta__AT0 b.delta__AT0)))
(let ((.def_73 (* .def_69 .def_72)))
(let ((.def_74 (* 10.0 .def_73)))
(let ((.def_96 (+ .def_74 .def_95)))
(let ((.def_78 (* (- 49.0) .def_69)))
(let ((.def_97 (+ .def_78 .def_96)))
(let ((.def_67 (* b.speed_y__AT0 b.delta__AT0)))
(let ((.def_68 (* 10.0 .def_67)))
(let ((.def_98 (+ .def_68 .def_97)))
(let ((.def_53 (* b.x__AT0 .def_52)))
(let ((.def_91 (* (- 10.0) .def_53)))
(let ((.def_99 (+ .def_91 .def_98)))
(let ((.def_93 (* 10.0 b.y__AT0)))
(let ((.def_100 (+ .def_93 .def_99)))
(let ((.def_130 (<= .def_100 0.0 )))
(let ((.def_144 (not .def_130)))
(let ((.def_128 (<= b.y__AT0 .def_53)))
(let ((.def_145 (or .def_128 .def_144)))
(let ((.def_54 (<= .def_53 b.y__AT0)))
(let ((.def_142 (not .def_54)))
(let ((.def_101 (<= 0.0 .def_100)))
(let ((.def_143 (or .def_101 .def_142)))
(let ((.def_146 (and .def_143 .def_145)))
(let ((.def_140 (or .def_137 .def_139)))
(let ((.def_141 (not .def_140)))
(let ((.def_147 (or .def_141 .def_146)))
(let ((.def_132 (not .def_101)))
(let ((.def_133 (or .def_54 .def_132)))
(let ((.def_129 (not .def_128)))
(let ((.def_131 (or .def_129 .def_130)))
(let ((.def_134 (and .def_131 .def_133)))
(let ((.def_126 (or .def_121 .def_125)))
(let ((.def_127 (not .def_126)))
(let ((.def_135 (or .def_127 .def_134)))
(let ((.def_148 (and .def_135 .def_147)))
(let ((.def_102 (and .def_54 .def_101)))
(let ((.def_149 (and .def_102 .def_148)))
(let ((.def_192 (and .def_149 .def_191)))
(let ((.def_60 (<= b.speed_loss__AT0 (/ 1 2))))
(let ((.def_57 (<= (/ 1 10) b.speed_loss__AT0)))
(let ((.def_61 (and .def_57 .def_60)))
(let ((.def_193 (and .def_61 .def_192)))
(let ((.def_62 (and .def_54 .def_61)))
(let ((.def_48 (not b.EVENT.0__AT0)))
(let ((.def_46 (not b.EVENT.1__AT0)))
(let ((.def_49 (or .def_46 .def_48)))
(let ((.def_6 (not b.counter.0__AT0)))
(let ((.def_4 (not b.counter.1__AT0)))
(let ((.def_39 (or .def_4 .def_6)))
(let ((.def_43 (or b.counter.3__AT0 .def_39)))
(let ((.def_40 (or b.counter.2__AT0 .def_39)))
(let ((.def_9 (not b.counter.2__AT0)))
(let ((.def_38 (or .def_6 .def_9)))
(let ((.def_41 (and .def_38 .def_40)))
(let ((.def_12 (not b.counter.3__AT0)))
(let ((.def_42 (or .def_12 .def_41)))
(let ((.def_44 (and .def_42 .def_43)))
(let ((.def_50 (and .def_44 .def_49)))
(let ((.def_63 (and .def_50 .def_62)))
(let ((.def_7 (and .def_4 .def_6)))
(let ((.def_10 (and .def_7 .def_9)))
(let ((.def_36 (and .def_10 .def_12)))
(let ((.def_34 (= b.speed_y__AT0 1.0 )))
(let ((.def_31 (= b.speed_x__AT0 1.0 )))
(let ((.def_27 (= b.y__AT0 10.0 )))
(let ((.def_23 (= b.x__AT0 0.0 )))
(let ((.def_19 (= b.time__AT0 0.0 )))
(let ((.def_21 (and .def_19 b.event_is_timed__AT0)))
(let ((.def_24 (and .def_21 .def_23)))
(let ((.def_28 (and .def_24 .def_27)))
(let ((.def_32 (and .def_28 .def_31)))
(let ((.def_35 (and .def_32 .def_34)))
(let ((.def_37 (and .def_35 .def_36)))
(let ((.def_64 (and .def_37 .def_63)))
(let ((.def_14 (or .def_7 b.counter.3__AT0)))
(let ((.def_13 (or .def_10 .def_12)))
(let ((.def_15 (and .def_13 .def_14)))
(let ((.def_16 (not .def_15)))
(let ((.def_65 (and .def_16 .def_64)))
(let ((.def_194 (and .def_65 .def_193)))
.def_194)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
(exit)
